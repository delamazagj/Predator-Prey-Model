{"version":3,"sources":["chart.js","particle.jsx","form.jsx","test.jsx","Table.jsx","App.jsx","index.js"],"names":["styl","zIndex","position","left","options","legend","labels","fontColor","scales","yAxes","ticks","beginAtZero","xAxes","Chart","data","this","props","react_default","a","createElement","style","es","Component","partOptions","particles","number","value","density","enable","value_area","color","line_linked","top","maxWidth","maxHeight","minWidth","minHeight","width","height","Background","particles_default","params","FormSample","schema","Ainput","e","_this","handleAInput","target","Binput","handleBInput","Adeath","handleADeath","Bdeath","handleBDeath","Agrowth","handleAGrowth","Bgrowth","handleBGrowth","handleForm","handleOnSubmit","Form","onSubmit","Group","unstackable","widths","Input","label","placeholder","onChange","Button","background","type","TableSample","index","prey","Object","objectSpread","data0","pred","data1","console","log","Table","inverted","Header","Row","HeaderCell","Body","Cell","Footer","colSpan","Menu","floated","pagination","Item","as","backgroundColor","onClick","showValuesTable","backgroundAttachment","styl2","padding","margin","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChangeStart","handleChange","setState","state","Binitial","Ainitial","handleChangeComplete","preventDefault","sh","_this$state","isNaN","alert","generateGraph","show","datasets","ind","pr0","pr1","counter","aI","parseFloat","bI","aG","bG","aD","bD","push","i","st","preytemp","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","cubicInterpolationMode","table","src_Table","Grid","divided","Column","textAlign","particle","chart","columns","src_form","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.48009d34.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\n/*let data = {\n  labels: [\n    \"Gen1\",\n    \"Gen2\",\n    \"Gen3\",\n    \"Gen4\",\n    \"Gen5\",\n    \"Gen6\",\n    \"Gen7\",\n    \"Gen8\",\n    \"Gen9\",\n    \"Gen10\"\n  ],\n  datasets: [\n    {\n      label: \"Prey\",\n      fill: true,\n      lineTension: 0.1,\n      backgroundColor: \"rgba(75,192,192,0.4)\",\n      borderColor: \"rgba(75,192,192,1)\",\n      borderCapStyle: \"butt\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"round\",\n      pointBorderColor: \"rgba(75,192,192,1)\",\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      cubicInterpolationMode: \"monotone\",\n      data: [20, 30, 15, 40, 20, 35, 25, 555, 666, 777]\n    },\n\n    {\n      label: \"Predator\",\n      fill: true,\n      lineTension: 0.1,\n      backgroundColor: \"rgba(75,192,192,0.4)\",\n      borderColor: \"rgba(255,255,255,255)\",\n      borderCapStyle: \"butt\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"round\",\n      pointBorderColor: \"rgba(255,255,255,255)\",\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      cubicInterpolationMode: \"monotone\",\n      data: [\n        50.0,\n        171.91,\n        219.76,\n        120.6,\n        60.05,\n        34.41,\n        29.51,\n        57.2,\n        202.58,\n        208.65\n      ]\n    }\n  ]\n};*/\n\nconst styl = {\n  zIndex: \"2\",\n  // display: \"inlineBlock\",\n  position: \"relative\",\n  left: \"10%\"\n  /*display: \"flex\",\n  justifyContent: \"center\",\n  width: \"1000px\"*/\n};\n\nconst options = {\n  legend: {\n    labels: {\n      // This more specific font property overrides the global property\n      fontColor: \"black\"\n    }\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n          fontColor: \"black\"\n        }\n      }\n    ],\n    xAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n          fontColor: \"black\"\n        }\n      }\n    ]\n  }\n};\n\nclass Chart extends Component {\n  // displayName: \"LineExample\",\n\n  render() {\n    let { data } = this.props;\n    return (\n      <div style={styl}>\n        <h2>Predator-Prey Population Model</h2>\n        <h3>Population / Generation</h3>\n\n        <Line data={data} options={options} />\n        {/* <img\n          style={{\n            height: \"250px\",\n            width: \"40%\",\n            position: \"fixed\",\n            bolder: \"0\",\n            padding: \"0\",\n            top: \"20%\",\n            right: \"0%\"\n          }}\n          src={require(\"./img.png\")}\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\n\nconst partOptions = {\n  particles: {\n    number: {\n      value: 150,\n\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    color: {\n      value: \"#D3D3D3\"\n    },\n\n    line_linked: {\n      enable: true,\n      color: \"#D3D3D3\"\n    }\n  }\n};\n\nconst styl = {\n  position: \"absolute\",\n  top: \"15%\",\n\n  // transform: \"translate(-50%, -50%)\",\n  maxWidth: \"100%\",\n  maxHeight: \"100%\",\n  minWidth: \"75%\",\n  minHeight: \"40%\",\n  width: \"auto\",\n  height: \"auto\",\n  zIndex: \"1\",\n  left: \"12%\"\n};\n\nclass Background extends Component {\n  render() {\n    return (\n      <div style={styl}>\n        <Particles params={partOptions} />\n      </div>\n    );\n  }\n}\n\nexport default Background;\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\n\nclass FormSample extends Component {\n  //let Ainitial = \"\";\n\n  schema = {};\n\n  Ainput = e => {\n    this.props.handleAInput(e.target.value);\n    //console.log(e.target.value);\n  };\n\n  Binput = e => {\n    this.props.handleBInput(e.target.value);\n    //console.log(e.target.value);\n  };\n\n  Adeath = e => {\n    this.props.handleADeath(e.target.value);\n    //console.log(e.target.value);\n  };\n\n  Bdeath = e => {\n    this.props.handleBDeath(e.target.value);\n    //console.log(e.target.value);\n  };\n\n  Agrowth = e => {\n    this.props.handleAGrowth(e.target.value);\n    //console.log(e.target.value);\n  };\n\n  Bgrowth = e => {\n    this.props.handleBGrowth(e.target.value);\n    //console.log(e.target.value);\n  };\n\n  handleForm = e => {\n    this.props.handleOnSubmit(e);\n    //console.log(this.Ainitial);\n    //console.log(e);\n  };\n  render() {\n    //let { handleOnSubmit } = this.props;\n    return (\n      <div>\n        <Form onSubmit={this.handleForm}>\n          <Form.Group unstackable widths={2}>\n            <Form.Input\n              label=\"Predator Initial Population\"\n              placeholder=\"Predator Initial Population\"\n              onChange={this.Ainput}\n            />\n            <Form.Input\n              label=\"Prey Initial Population\"\n              placeholder=\"Prey Initial Population\"\n              onChange={this.Binput}\n            />\n          </Form.Group>\n          <Form.Group widths={2}>\n            <Form.Input\n              label=\"Predator Growth Rate\"\n              placeholder=\"Predator Growth Rate\"\n              onChange={this.Agrowth}\n            />\n            <Form.Input\n              label=\"Prey Growth Rate\"\n              placeholder=\"Prey Growth Rate\"\n              onChange={this.Bgrowth}\n            />\n          </Form.Group>\n          <Form.Group widths={2}>\n            <Form.Input\n              label=\"Predator Death Rate\"\n              placeholder=\"Predator Death Rate\"\n              onChange={this.Adeath}\n            />\n            <Form.Input\n              label=\"Prey Death Rate\"\n              placeholder=\"Prey Death Rate\"\n              onChange={this.Bdeath}\n            />\n          </Form.Group>\n          <Button style={{ background: \"black\", color: \"white\" }} type=\"submit\">\n            Generate\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default FormSample;\n","import React, { Component } from \"react\";\nimport Slider from \"react-rangeslider\";\nimport \"react-rangeslider/lib/index.css\";\n\nclass Horizontal extends Component {\n  /*constructor(props, context) {\n    super(props, context);\n    this.state = {\n      value: 10\n    };\n  }\n\n  handleChangeStart = value => {\n    console.log(\"Change event started\");\n    this.setState({\n      value: value\n    });\n  };\n\n  handleChange = value => {\n    this.setState({\n      value: value\n    });\n  };\n\n  handleChangeComplete = value => {\n    console.log(\"Change event completed\");\n    this.setState({\n      value: value\n    });\n  };*/\n\n  render() {\n    let {\n      value,\n      handleChangeStart,\n      handleChange,\n      handleChangeComplete\n    } = this.props;\n    return (\n      <div className=\"slider\">\n        <div className=\"value\">Predator Effectiveness -> {value}</div>\n        <Slider\n          min={0}\n          max={100}\n          value={value}\n          onChangeStart={handleChangeStart}\n          onChange={handleChange}\n          onChangeComplete={handleChangeComplete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Horizontal;\n","import React, { Component } from \"react\";\nimport { Icon, Label, Menu, Table } from \"semantic-ui-react\";\n\nconst TableSample = props => {\n  //console.log(props);\n\n  let index = props.index;\n  let prey = { ...props.data0 };\n  let pred = { ...props.data1 };\n  console.log(index);\n\n  return (\n    <div>\n      <Table color={\"teal\"} inverted>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Generation</Table.HeaderCell>\n            <Table.HeaderCell>Predator</Table.HeaderCell>\n            <Table.HeaderCell>Prey</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>\n              {/* <Label ribbon>First</Label> */}\n              {index + 1}\n            </Table.Cell>\n            <Table.Cell>{pred[0]}</Table.Cell>\n            <Table.Cell>{prey[0]}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>{index + 2}</Table.Cell>\n            <Table.Cell>{pred[1]}</Table.Cell>\n            <Table.Cell>{prey[1]}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>{index + 3}</Table.Cell>\n            <Table.Cell>{pred[2]}</Table.Cell>\n            <Table.Cell>{prey[2]}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>{index + 4}</Table.Cell>\n            <Table.Cell>{pred[3]}</Table.Cell>\n            <Table.Cell>{prey[3]}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>{index + 5}</Table.Cell>\n            <Table.Cell>{pred[4]}</Table.Cell>\n            <Table.Cell>{prey[4]}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell colSpan=\"3\">\n              <Menu floated=\"right\" pagination>\n                {/* <Menu.Item as=\"a\" icon>\n                  <Icon name=\"chevron left\" />\n                </Menu.Item> */}\n                <Menu.Item\n                  as=\"a\"\n                  style={{ backgroundColor: \"black\", color: \"white\" }}\n                  onClick={() => props.showValuesTable(1)}\n                >\n                  1\n                </Menu.Item>\n                <Menu.Item\n                  as=\"a\"\n                  style={{ backgroundColor: \"black\", color: \"white\" }}\n                  onClick={() => props.showValuesTable(2)}\n                >\n                  2\n                </Menu.Item>\n\n                {/* <Menu.Item as=\"a\" icon>\n                  <Icon name=\"chevron right\" />\n                </Menu.Item> */}\n              </Menu>\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </div>\n  );\n};\n\nexport default TableSample;\n","import React, { Component } from \"react\";\nimport Chart from \"./chart.js\";\nimport \"./App.css\";\nimport Background from \"./particle.jsx\";\n//import Test from \"./test.jsx\";\nimport FormSample from \"./form.jsx\";\nimport Horizontal from \"./test.jsx\";\nimport { Grid } from \"semantic-ui-react\";\nimport TableSample from \"./Table\";\n\n//const background = ;\nconst styl = {\n  background: \"linear-gradient(to right, rgb(203, 52, 181), rgb(68, 166, 187))\",\n  //position: \"relative\",\n  // width: \"100%\",\n  // height: \"100%\",\n  backgroundAttachment: \"fixed\"\n  /*padding: \"0\",\n  margin: \"0\"*/\n};\n\nconst styl2 = {\n  width: \"100%\",\n  height: \"100%\",\n  padding: \"0\",\n  margin: \"0px\"\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ind: 0,\n      pr0: [],\n      pr1: [],\n      value: 50,\n      Ainitial: \"\",\n      Binitial: \"\",\n      Adeath: \"\",\n      Bdeath: \"\",\n      Agrowth: \"\",\n      Bgrowth: \"\",\n      show: false,\n      data: {\n        //fontColor: \"#fff\",\n        labels: [\n          \" \",\n          \"Gen1\",\n          \" \",\n          \"Gen2\",\n          \" \",\n          \"Gen3\",\n          \" \",\n          \"Gen4\",\n          \" \",\n          \"Gen5\",\n          \" \",\n          \"Gen6\",\n          \" \",\n          \"Gen7\",\n          \" \",\n          \"Gen8\",\n          \" \",\n          \"Gen9\",\n          \" \",\n          \"Gen10\"\n        ],\n        datasets: [\n          {\n            label: \"Prey\",\n            // color: \"black\",\n            //fontColor: \"#fff\",\n            fill: true,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"round\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            cubicInterpolationMode: \"monotone\",\n            data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n          },\n\n          {\n            label: \"Predator\",\n            fill: true,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(255,255,255,255)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"round\",\n            pointBorderColor: \"rgba(255,255,255,255)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            cubicInterpolationMode: \"monotone\",\n            data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n          }\n        ]\n      }\n    };\n  }\n  handleChangeStart = () => {\n    console.log(\"Change event started\");\n    /*this.setState({\n      value: value\n    });*/\n  };\n\n  handleChange = value => {\n    this.setState({\n      value: value\n    });\n  };\n\n  handleBGrowth = e => {\n    //console.log(e);\n\n    this.setState(\n      {\n        Bgrowth: e\n      },\n      () => {\n        console.log(\"B-Growth -> \" + this.state.Bgrowth);\n      }\n    );\n  };\n  handleAGrowth = e => {\n    //console.log(e);\n\n    this.setState(\n      {\n        Agrowth: e\n      },\n      () => {\n        console.log(\"A-Growth -> \" + this.state.Agrowth);\n      }\n    );\n  };\n\n  handleBDeath = e => {\n    //console.log(e);\n\n    this.setState(\n      {\n        Bdeath: e\n      },\n      () => {\n        console.log(\"B-Death -> \" + this.state.Bdeath);\n      }\n    );\n  };\n\n  handleADeath = e => {\n    //console.log(e);\n\n    this.setState(\n      {\n        Adeath: e\n      },\n      () => {\n        console.log(\"A-Death -> \" + this.state.Adeath);\n      }\n    );\n  };\n\n  handleBInput = e => {\n    //console.log(e);\n\n    this.setState(\n      {\n        Binitial: e\n      },\n      () => {\n        console.log(\"B-Initial -> \" + this.state.Binitial);\n      }\n    );\n  };\n\n  handleAInput = e => {\n    //console.log(e);\n\n    this.setState(\n      {\n        Ainitial: e\n      },\n      () => {\n        console.log(\"A-Initial -> \" + this.state.Ainitial);\n      }\n    );\n  };\n\n  handleChangeComplete = () => {\n    console.log(\"Change event completed\");\n    /*this.setState({\n      value: value\n    });*/\n  };\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n    let sh = false;\n    console.log(\"Form submitted\");\n    let { Ainitial, Binitial, Adeath, Bdeath, Agrowth, Bgrowth } = this.state;\n    if (Ainitial === \"\" || isNaN(Ainitial)) {\n      alert(\"You have to provide initial population for predator\");\n    } else if (Binitial === \"\" || isNaN(Binitial)) {\n      alert(\"You have to provide initial population for prey\");\n    } else if (Agrowth === \"\" || isNaN(Agrowth)) {\n      alert(\"You have to provide growth rate for predator\");\n    } else if (Bgrowth === \"\" || isNaN(Bgrowth)) {\n      alert(\"You have to provide growth rate for prey\");\n    } else if (Adeath === \"\" || isNaN(Adeath)) {\n      alert(\"You have to provide death rate for predator\");\n    } else if (Bdeath === \"\" || isNaN(Bdeath)) {\n      alert(\"You have to provide death rate for prey\");\n    } else {\n      sh = true;\n      this.generateGraph();\n    }\n    this.setState({\n      show: sh\n    });\n  };\n\n  showValuesTable = index => {\n    let prey = { ...this.state.data.datasets[0].data };\n    let pred = { ...this.state.data.datasets[1].data };\n\n    let ind = 0;\n    let pr0 = [];\n    let pr1 = [];\n    if (index === 1) {\n      pr0 = [prey[1], prey[3], prey[5], prey[7], prey[9]];\n      pr1 = [pred[1], pred[3], pred[5], pred[7], pred[9]];\n      ind = 0;\n    } else {\n      pr0 = [prey[11], prey[13], prey[15], prey[17], prey[19]];\n      pr1 = [pred[11], pred[13], pred[15], pred[17], pred[19]];\n      ind = 5;\n    }\n    this.setState({\n      ind: ind,\n      pr0: pr0,\n      pr1: pr1\n    });\n  };\n\n  generateGraph = () => {\n    let pred = [];\n    let prey = [];\n    let counter = 0;\n    const fineness = 0.001;\n    let aI = parseFloat(this.state.Ainitial);\n    let bI = parseFloat(this.state.Binitial);\n    let aG = parseFloat(this.state.Agrowth);\n    let bG = parseFloat(this.state.Bgrowth);\n    let aD = parseFloat(this.state.Adeath);\n    let bD = parseFloat(this.state.Bdeath);\n    pred.push(aI);\n    prey.push(bI);\n\n    for (let i = 0; i < 100000; i++) {\n      if (counter === 5000) {\n        pred.push(aI);\n        prey.push(bI);\n        counter = 0;\n        let st =\n          \"Generation \" +\n          i +\n          \": Predator: \" +\n          aI +\n          \", Prey: \" +\n          bI +\n          \"\\t\\tNEW GENERATION!\";\n        console.log(st);\n      }\n\n      let preytemp = bI + (bG * bI - bD * aI * bI) * fineness;\n      aI = aI + (aG * bI * aI - aD * aI) * fineness;\n      bI = preytemp;\n      counter++;\n    }\n\n    let data = { ...this.state.data };\n    let pr0 = [prey[1], prey[3], prey[5], prey[7], prey[9]];\n    let pr1 = [pred[1], pred[3], pred[5], pred[7], pred[9]];\n    data.datasets[0].data = prey;\n    data.datasets[1].data = pred;\n    this.setState(\n      {\n        ind: 0,\n        pr0: pr0,\n        pr1: pr1,\n        data: data,\n        show: true\n      },\n      () => {\n        console.log(\"Graph generated\");\n      }\n    );\n    // let prey = { ...this.state.data.datasets.data[0].data };\n    // let pred = { ...this.state.data.datasets.data[1].data };\n    console.log(pred);\n    console.log(prey);\n  };\n\n  render() {\n    let { value } = this.state;\n\n    let table = false;\n    if (this.state.show === true)\n      table = (\n        <TableSample\n          data0={this.state.pr0}\n          data1={this.state.pr1}\n          showValuesTable={this.showValuesTable}\n          index={this.state.ind}\n        />\n      );\n\n    return (\n      <div style={styl}>\n        <Grid style={styl2} divided>\n          <Grid.Column>\n            <Grid.Row>\n              <div style={{ height: \"45%\", width: \"80%\", textAlign: \"center\" }}>\n                <div>\n                  <Background />\n                  <Chart data={this.state.data} />\n                </div>\n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <h2>Input Values</h2>\n              {/* <Horizontal\n                style\n                handleChangeStart={this.handleChangeStart}\n                handleChange={this.handleChange}\n                handleChangeComplete={this.handleChangeComplete}\n                value={value}\n              /> */}\n              <Grid columns={2} divided>\n                <Grid.Row>\n                  <Grid.Column>\n                    <FormSample\n                      style={{ margin: \"10%\" }}\n                      handleOnSubmit={this.handleOnSubmit}\n                      handleAInput={this.handleAInput}\n                      handleBInput={this.handleBInput}\n                      handleADeath={this.handleADeath}\n                      handleBDeath={this.handleBDeath}\n                      handleAGrowth={this.handleAGrowth}\n                      handleBGrowth={this.handleBGrowth}\n                    />\n                  </Grid.Column>\n                  <Grid.Column>{table}</Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Grid.Row>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\nexport default App;\n\n// {this.state.show && (\n//   <div style={{ margin: \"10%\" }}>\n//     <h4>Predator Initial Population -> {this.state.Ainitial}</h4>\n//     <h4>Prey Initial Population -> {this.state.Binitial}</h4>\n//     <h4>Predator Growth Rate -> {this.state.Agrowth}</h4>\n//     <h4>Prey Growth Rate -> {this.state.Bgrowth}</h4>\n//     <h4>Predator Death Rate -> {this.state.Adeath}</h4>\n//     <h4>Prey Death Rate -> {this.state.Bdeath}</h4>\n//   </div>\n// )}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n//import \"../semantic/dist/semantic.min.css\";\nimport App from \"./App.jsx\";\nimport * as firebase from \"firebase\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBnk3HIO9xMYb4f80iv6ztZhdDzugAsqq0\",\n  authDomain: \"predator-prey-model.firebaseapp.com\",\n  databaseURL: \"https://predator-prey-model.firebaseio.com\",\n  projectId: \"predator-prey-model\",\n  storageBucket: \"predator-prey-model.appspot.com\",\n  messagingSenderId: \"207789264198\",\n  appId: \"1:207789264198:web:ccd95694d350410a\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// ========================================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}